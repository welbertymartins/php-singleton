name: Validate Singleton Test Suite

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'test/**'
      - 'composer.json'
      - 'composer.lock'
      - 'phpunit.xml'
      - 'README.md'
      - .github/workflows/tests.yml

  pull_request:
    branches: [main]
    paths:
      - 'src/**'
      - 'test/**'
      - 'composer.json'
      - 'composer.lock'
      - 'phpunit.xml'
      - 'README.md'
      - .github/workflows/tests.yml

jobs:
  determine-php-version:
    name: 🧾 Extract PHP version from composer.json
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Read PHP version
        id: set-matrix
        run: |
          PHP_VERSION=$(jq -r '.require.php' composer.json | grep -oE '[0-9]+\.[0-9]+' | head -n1)
          echo "Using PHP version: $PHP_VERSION"
          echo "matrix={\"php\": [\"$PHP_VERSION\"]}" >> $GITHUB_OUTPUT

  run-tests:
    name: 🧪 Test on PHP ${{ matrix.php }}
    needs: determine-php-version
    runs-on: ubuntu-latest

    strategy:
      matrix: ${{ fromJson(needs.determine-php-version.outputs.matrix) }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none

      - name: 📦 Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: ✅ Run PHPUnit tests
        run: vendor/bin/phpunit --configuration phpunit.xml
